# Workflow API version
apiVersion: io.orquestra.workflow/1.0.0

# Prefix for workflow ID
name: qcbm-opt-16q4l-basin

imports:
- name: bars-and-stripes
  type: git
  parameters:
    repository: "git@github.com:salperinlea/bars-and-stripes.git"
    branch: "main"
- name: z-quantum-core
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/z-quantum-core.git"
    branch: "master"
- name: z-quantum-qcbm
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/z-quantum-qcbm.git"
    branch: "master"
- name: z-quantum-optimizers
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/z-quantum-optimizers.git"
    branch: "master"
- name: qe-qulacs
  type: git
  parameters:
    repository: "git@github.com:zapatacomputing/qe-qulacs.git"
    branch: "master"

steps:

- name: get-initial-parameters
  config:
    runtime:
      language: python3
      imports: [z-quantum-core, z-quantum-qcbm]
      parameters:
        file: z-quantum-core/steps/circuit.py
        function: generate_random_ansatz_params
    resources:
      cpu: "2000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - ansatz_specs: '{"module_name": "zquantum.qcbm.ansatz", "function_name": "QCBMAnsatz", "number_of_layers": 4, "number_of_qubits": 16, "topology": "all"}'
      type: string
    - min_value: -1.57
      type: float
    - max_value: 1.57
      type: float
    - seed: 9
      type: int
  outputs:
    - name: params
      type: ansatz-params
- name: get-bars-and-stripes-distribution
  config:
    runtime:
      language: python3
      imports: [z-quantum-core, bars-and-stripes]
      parameters:
        file: bars-and-stripes/target.py
        function: get_bars_and_stripes_target_distribution
    resources:
      cpu: "2000m"
      memory: "1Gi"
      disk: "10Gi"
  inputs:
    - nrows: 4
      type: int
    - ncols: 4
      type: int
    - fraction: 1.0
      type: float
    - method: zigzag
      type: string
  outputs:
    - name: distribution
      type: bitstring-distribution

- name: optimize-circuit
  passed: [get-bars-and-stripes-distribution, get-initial-parameters]
  config:
    runtime:
      language: python3
      imports:  [z-quantum-core, z-quantum-optimizers, z-quantum-qcbm, qe-qulacs]
      parameters:
        file: z-quantum-qcbm/steps/optimize_variational_qcbm_circuit.py
        function: optimize_variational_qcbm_circuit
    resources:
      cpu: "2000m"
      memory: "14Gi"
  inputs:
  - n_qubits: 16
    type: int
  - n_layers: 4
    type: int
  - topology: all
    type: string
  - distance_measure_specs:
      module_name: zquantum.core.bitstring_distribution
      function_name: compute_clipped_negative_log_likelihood
    type: specs
  - distance_measure_parameters: '{"epsilon": 1e-6}'
    type: string
  - backend_specs:
      module_name: qequlacs.simulator
      function_name: QulacsSimulator
    type: specs
  - optimizer_specs:
      module_name: zquantum.optimizers.basin_hopping
      function_name: BasinHoppingOptimizer
      niter: 50
      minimizer_kwargs: {"method":"L-BFGS-B"}
    type: specs
  - initial_parameters: ((get-initial-parameters.params))
    type: ansatz-params
  - target_distribution: ((get-bars-and-stripes-distribution.distribution))
    type: bitstring-distribution
  outputs:
    - name: qcbm-optimization-results
      type: optimization-results
    - name: optimized-parameters
      type: ansatz-params

types:
 - ansatz-params
 - bitstring-distribution
 - optimization-results
 - specs